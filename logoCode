// colorwheel demo for Adafruit RGBmatrixPanel library.
// Renders a nice circle of hues on our 32x32 RGB LED matrix:
// http://www.adafruit.com/products/607

// Written by Limor Fried/Ladyada & Phil Burgess/PaintYourDragon
// for Adafruit Industries.
// BSD license, all text above must be included in any redistribution.

#include <RGBmatrixPanel.h>

// Most of the signal pins are configurable, but the CLK pin has some
// special constraints.  On 8-bit AVR boards it must be on PORTB...
// Pin 8 works on the Arduino Uno & compatibles (e.g. Adafruit Metro),
// Pin 11 works on the Arduino Mega.  On 32-bit SAMD boards it must be
// on the same PORT as the RGB data pins (D2-D7)...
// Pin 8 works on the Adafruit Metro M0 or Arduino Zero,
// Pin A4 works on the Adafruit Metro M4 (if using the Adafruit RGB
// Matrix Shield, cut trace between CLK pads and run a wire to A4).

#define CLK  8   // USE THIS ON ARDUINO UNO, ADAFRUIT METRO M0, etc.
//#define CLK A4 // USE THIS ON METRO M4 (not M0)
//#define CLK 11 // USE THIS ON ARDUINO MEGA
#define OE   9
#define LAT 10
#define A   A0
#define B   A1
#define C   A2
#define D   A3

RGBmatrixPanel matrix(A, B, C, D, CLK, LAT, OE, false);

int darkBlue = matrix.Color444(0, 16 >> 4, 73>> 4);
int skyBlue = matrix.Color444(41 >> 4, 133>> 4, 216 >> 4);
int white = matrix.Color444(255, 255, 255);

void setup() {
  int      x, y;
  float    dx, dy, d;
  uint16_t c;

  matrix.begin();

  for(y=0; y < matrix.width(); y++) {
    dy = 15.5 - (float)y;
    for(x=0; x < matrix.height(); x++) {
      dx = 15.5 - (float)x;
      d  = dx * dx + dy * dy;
      if(d <= (16.5 * 16.5) && d > (15.3 * 15.3) || d <= (14.5 * 14.5) && d > (13.3 * 13.3)) { // Inside the circle(ish)?
        c = darkBlue;
      } else {
        c = 0;
      }
      matrix.drawPixel(x, y, c);
    }
  }
  matrix.fillRect(7 , 6 , 18, 5, darkBlue);
  matrix.fillRect(7 , 11 , 18, 10, skyBlue);

  for (int i = 1; i <= 8; i++) {
    int y = 20 + i;
    int halfWidth = 9 - i;
    int l = 16 - halfWidth,
        r = 15 + halfWidth;

    matrix.drawLine(l, y, r, y, skyBlue);
  }
}

void loop() {
  // Do nothing -- image doesn't change
}
